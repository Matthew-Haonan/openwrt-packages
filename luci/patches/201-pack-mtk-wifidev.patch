diff -uNr a/libs/core/luasrc/model/network.lua ./b/libs/core/luasrc/model/network.lua
--- a/libs/core/luasrc/model/network.lua
+++ b/libs/core/luasrc/model/network.lua
@@ -1336,19 +1336,20 @@
 	self.sid = net
 
 	local num = { }
-	local netid
+	local netid,guess_dev
 	_uci_real:foreach("wireless", "wifi-iface",
 		function(s)
 			if s.device then
 				num[s.device] = num[s.device] and num[s.device] + 1 or 1
 				if s['.name'] == self.sid then
 					netid = "%s.network%d" %{ s.device, num[s.device] }
+					if s.mode == "sta" then guess_dev = "apcli0" end
 					return false
 				end
 			end
 		end)
 
-	local dev = _uci_state:get("wireless", self.sid, "ifname") or netid
+	local dev = _uci_state:get("wireless", self.sid, "ifname") or guess_dev or netid
 
 	self.netid  = netid
 	self.wdev   = dev
diff -uNr a/modules/admin-full/luasrc/controller/admin/network.lua ./b/modules/admin-full/luasrc/controller/admin/network.lua
--- a/modules/admin-full/luasrc/controller/admin/network.lua
+++ b/modules/admin-full/luasrc/controller/admin/network.lua
@@ -224,6 +224,57 @@
 	end
 end
 
+string.explode = function(s, p)
+    local rt= {}
+    string.gsub(s, '[^'..p..']+', function(w) table.insert(rt, w) end )
+    return rt
+end
+
+function ralink_wifi_delete()
+	local uci = require("luci.model.uci").cursor()
+
+	uci:foreach("wireless","wifi-iface",
+		function(section)
+			local mode = section["mode"]
+			local network = section["network"]
+
+			if "sta" == mode then
+				local name = section[".name"]
+				local nuci = require("luci.model.uci").cursor()
+				uci:delete("wireless",name)
+				uci:commit("wireless")
+				
+				nuci:foreach("network","interface",
+					function(s)
+						if (s['.name'] == network) then
+							local remove_interface = true
+							if s['type'] == 'bridge' then
+								local arr = string.explode(s['ifname'],' ')
+								
+								if #arr > 1 then
+									for idx,val in pairs(arr) do
+										if val == 'apcli0' or val == 'ra0' then
+											table.remove(arr, idx)
+										end
+									end
+									nuci:set('network',s['.name'],'ifname',table.concat(arr,' '))
+									remove_interface = false
+								end
+							end
+							if remove_interface then
+								nuci:delete('network', s['.name'])
+							end
+							nuci:commit('network')
+						end
+					end
+				)
+				return false
+			end
+			return true
+		end
+	)
+end
+
 function wifi_delete(network)
 	local ntm = require "luci.model.network".init()
 	local wnet = ntm:get_wifinet(network)
@@ -243,6 +294,8 @@
 			end
 			luci.sys.call("env -i /sbin/wifi up %q >/dev/null" % dev:name())
 		end
+	else
+		ralink_wifi_delete()
 	end
 
 	luci.http.redirect(luci.dispatcher.build_url("admin/network/wireless"))
@@ -375,6 +428,7 @@
 	local dev
 	for dev in devs:gmatch("[%w%.%-]+") do
 		rv[#rv+1] = s.wifi_network(dev)
+		if false == rv[#rv]["up"] then rv[#rv]["bssid"]="00:00:00:00:00:00" end
 	end
 
 	if #rv > 0 then
diff -uNr a/modules/admin-full/luasrc/view/admin_network/wifi_overview.htm ./b/modules/admin-full/luasrc/view/admin_network/wifi_overview.htm
--- a/modules/admin-full/luasrc/view/admin_network/wifi_overview.htm
+++ b/modules/admin-full/luasrc/view/admin_network/wifi_overview.htm
@@ -174,6 +174,12 @@
 	XHR.poll(5, '<%=luci.dispatcher.build_url("admin", "network", "wireless_status", table.concat(netlist, ","))%>', null,
 		function(x, st)
 		{
+			if(!st){
+				try{
+					st=eval('('+x.responseText+')');
+				}catch(e){
+				}
+			}
 			if (st)
 			{
 				var assoctable = document.getElementById('iw-assoclist');
